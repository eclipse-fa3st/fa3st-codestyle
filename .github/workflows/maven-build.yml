name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Cache maven repository
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
          ~/.sonar/cache
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Set up JDK and Caching
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        cache: 'maven'
        cache-dependency-path: 'pom.xml'

    - name: Build with Maven
      run: |
        mvn verify -B

    - name: Set env variables
      run: |
        echo "Exporting Variables"
        export version=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)
        echo "VERSION=${version}"     >> $GITHUB_ENV

    - name: Set up GnuPG
      if:  ${{ endsWith(env.VERSION, '-SNAPSHOT') }}
      env:
        GPG_EXECUTABLE: gpg
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo $GPG_PRIVATE_KEY | base64 --decode | gpg --import
        gpg --list-secret-keys --keyid-format LONG
        echo $GPG_PASSPHRASE | gpg --batch --yes --pinentry-mode loopback --default-key $GPG_KEY_ID --passphrase-fd 0 --sign

    - name: Deploy SNAPSHOTS
      if:  ${{ endsWith(env.VERSION, '-SNAPSHOT') }}
      env:
        CENTRAL_SONATYPE_TOKEN_USERNAME: ${{ secrets.CENTRAL_SONATYPE_TOKEN_USERNAME }}
        CENTRAL_SONATYPE_TOKEN_PASSWORD: ${{ secrets.CENTRAL_SONATYPE_TOKEN_PASSWORD }}
      run: mvn clean deploy -P release --settings maven-ci-settings.xml -B